[0.009s] Invoking command in '/home/daguill/my_ws/build/c_int': CMAKE_PREFIX_PATH=/opt/ros/humble /usr/bin/cmake --build /home/daguill/my_ws/build/c_int -- -j12 -l12
[0.037s] [35m[1mConsolidate compiler generated dependencies of target sub_array[0m
[0.046s] [ 50%] Built target pub_array
[0.048s] [ 75%] [32mBuilding CXX object CMakeFiles/sub_array.dir/src/array_sub.cpp.o[0m
[1.868s] [01m[K/home/daguill/my_ws/src/c_int/src/array_sub.cpp:21:44:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KString[m[Kâ€™ in namespace â€˜[01m[Kstd_msgs::msg[m[Kâ€™ does not name a type
[1.868s]    21 |   void topic_callback(const std_msgs::msg::[01;31m[KString[m[K & msg) const
[1.868s]       |                                            [01;31m[K^~~~~~[m[K
[1.868s] [01m[K/home/daguill/my_ws/src/c_int/src/array_sub.cpp:25:39:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KString[m[Kâ€™ is not a member of â€˜[01m[Kstd_msgs::msg[m[Kâ€™
[1.868s]    25 |   rclcpp::Subscription<std_msgs::msg::[01;31m[KString[m[K>::SharedPtr subscription_;
[1.868s]       |                                       [01;31m[K^~~~~~[m[K
[1.869s] [01m[K/home/daguill/my_ws/src/c_int/src/array_sub.cpp:25:45:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
[1.869s]    25 |   rclcpp::Subscription<std_msgs::msg::String[01;31m[K>[m[K::SharedPtr subscription_;
[1.869s]       |                                             [01;31m[K^[m[K
[1.869s] [01m[K/home/daguill/my_ws/src/c_int/src/array_sub.cpp:25:45:[m[K [01;31m[Kerror: [m[Ktemplate argument 3 is invalid
[1.869s] [01m[K/home/daguill/my_ws/src/c_int/src/array_sub.cpp:25:45:[m[K [01;31m[Kerror: [m[Ktemplate argument 4 is invalid
[1.869s] [01m[K/home/daguill/my_ws/src/c_int/src/array_sub.cpp:25:45:[m[K [01;31m[Kerror: [m[Ktemplate argument 5 is invalid
[1.869s] [01m[K/home/daguill/my_ws/src/c_int/src/array_sub.cpp:25:48:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ at end of member declaration
[1.869s]    25 |   rclcpp::Subscription<std_msgs::msg::String>::[01;31m[KSharedPtr[m[K subscription_;
[1.869s]       |                                                [01;31m[K^~~~~~~~~[m[K
[1.869s]       |                                                         [32m[K;[m[K
[1.870s] [01m[K/home/daguill/my_ws/src/c_int/src/array_sub.cpp:25:58:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ksubscription_[m[Kâ€™ does not name a type; did you mean â€˜[01m[Krmw_subscription_t[m[Kâ€™?
[1.870s]    25 |   rclcpp::Subscription<std_msgs::msg::String>::SharedPtr [01;31m[Ksubscription_[m[K;
[1.870s]       |                                                          [01;31m[K^~~~~~~~~~~~~[m[K
[1.870s]       |                                                          [32m[Krmw_subscription_t[m[K
[1.876s] [01m[K/home/daguill/my_ws/src/c_int/src/array_sub.cpp:[m[K In constructor â€˜[01m[KArraySuscriber::ArraySuscriber()[m[Kâ€™:
[1.876s] [01m[K/home/daguill/my_ws/src/c_int/src/array_sub.cpp:16:5:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ksubscription_[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Krmw_subscription_t[m[Kâ€™?
[1.876s]    16 |     [01;31m[Ksubscription_[m[K = this->create_subscription<std_msgs::msg::Int8MultiArray>(
[1.876s]       |     [01;31m[K^~~~~~~~~~~~~[m[K
[1.876s]       |     [32m[Krmw_subscription_t[m[K
[1.911s] [01m[K/home/daguill/my_ws/src/c_int/src/array_sub.cpp:[m[K In member function â€˜[01m[Kvoid ArraySuscriber::topic_callback(const int&) const[m[Kâ€™:
[1.911s] [01m[K/home/daguill/my_ws/src/c_int/src/array_sub.cpp:21:53:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kmsg[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
[1.911s]    21 |   void topic_callback([01;35m[Kconst std_msgs::msg::String & msg[m[K) const
[1.911s]       |                       [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~[m[K
[2.255s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
[2.255s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29[m[K,
[2.255s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[2.255s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[2.256s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[2.256s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[2.256s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[2.256s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[2.256s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[2.256s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[2.256s]                  from [01m[K/home/daguill/my_ws/src/c_int/src/array_sub.cpp:5[m[K:
[2.256s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (ArraySuscriber::*(ArraySuscriber*, std::_Placeholder<1>))(const int&) const>; MessageT = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[2.256s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (ArraySuscriber::*(ArraySuscriber*, std::_Placeholder<1>))(const int&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std_msgs::msg::Int8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[2.256s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (ArraySuscriber::*(ArraySuscriber*, std::_Placeholder<1>))(const int&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std_msgs::msg::Int8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[2.257s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (ArraySuscriber::*(ArraySuscriber*, std::_Placeholder<1>))(const int&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std_msgs::msg::Int8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[2.257s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (ArraySuscriber::*(ArraySuscriber*, std::_Placeholder<1>))(const int&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std_msgs::msg::Int8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[2.257s] [01m[K/home/daguill/my_ws/src/c_int/src/array_sub.cpp:16:77:[m[K   required from here
[2.257s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::detail::AnySubscriptionCallbackHelper<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void>, false>::variant_type[m[Kâ€™ {aka â€˜[01m[Kstd::variant<std::function<void(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >[m[Kâ€™} and â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::_Bind<void (ArraySuscriber::*(ArraySuscriber*, std::_Placeholder<1>))(const int&) const>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const int&)>[m[Kâ€™})
[2.257s]   394 |       [01;31m[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)[m[K;
[2.257s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[2.257s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28[m[K,
[2.257s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
[2.257s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[2.257s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[2.257s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[2.257s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[2.257s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[2.257s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[2.257s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[2.257s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[2.257s]                  from [01m[K/home/daguill/my_ws/src/c_int/src/array_sub.cpp:5[m[K:
[2.257s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[2.257s]  1461 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[2.258s]       |         [01;36m[K^~~~~~~~[m[K
[2.258s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[2.258s] /usr/include/c++/11/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(const int&)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™:
[2.258s] [01m[K/usr/include/c++/11/variant:1457:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(const int&)>][m[Kâ€™
[2.258s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (ArraySuscriber::*(ArraySuscriber*, std::_Placeholder<1>))(const int&) const>; MessageT = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™
[2.258s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (ArraySuscriber::*(ArraySuscriber*, std::_Placeholder<1>))(const int&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std_msgs::msg::Int8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[2.258s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (ArraySuscriber::*(ArraySuscriber*, std::_Placeholder<1>))(const int&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std_msgs::msg::Int8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[2.258s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (ArraySuscriber::*(ArraySuscriber*, std::_Placeholder<1>))(const int&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std_msgs::msg::Int8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[2.258s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (ArraySuscriber::*(ArraySuscriber*, std::_Placeholder<1>))(const int&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std_msgs::msg::Int8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[2.258s] [01m[K/home/daguill/my_ws/src/c_int/src/array_sub.cpp:16:77:[m[K   required from here
[2.258s] [01m[K/usr/include/c++/11/variant:1375:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[2.258s]  1375 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[2.258s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[2.258s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (ArraySuscriber::*(ArraySuscriber*, std::_Placeholder<1>))(const int&) const>; MessageT = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[2.258s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (ArraySuscriber::*(ArraySuscriber*, std::_Placeholder<1>))(const int&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std_msgs::msg::Int8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[2.258s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (ArraySuscriber::*(ArraySuscriber*, std::_Placeholder<1>))(const int&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std_msgs::msg::Int8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[2.258s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (ArraySuscriber::*(ArraySuscriber*, std::_Placeholder<1>))(const int&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std_msgs::msg::Int8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[2.259s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (ArraySuscriber::*(ArraySuscriber*, std::_Placeholder<1>))(const int&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std_msgs::msg::Int8MultiArray_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[2.259s] [01m[K/home/daguill/my_ws/src/c_int/src/array_sub.cpp:16:77:[m[K   required from here
[2.259s] [01m[K/usr/include/c++/11/variant:1398:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[2.259s]  1398 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[2.259s]       |                [01;36m[K^~~~~~~~[m[K
[2.259s] [01m[K/usr/include/c++/11/variant:1398:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::_Bind<void (ArraySuscriber::*(ArraySuscriber*, std::_Placeholder<1>))(const int&) const>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const int&)>[m[Kâ€™} to â€˜[01m[Kconst std::variant<std::function<void(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&[m[Kâ€™
[2.259s]  1398 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[2.259s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[2.259s] [01m[K/usr/include/c++/11/variant:1399:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[2.259s]  1399 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[2.259s]       |                [01;36m[K^~~~~~~~[m[K
[2.259s] [01m[K/usr/include/c++/11/variant:1399:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::_Bind<void (ArraySuscriber::*(ArraySuscriber*, std::_Placeholder<1>))(const int&) const>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const int&)>[m[Kâ€™} to â€˜[01m[Kstd::variant<std::function<void(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int8MultiArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int8MultiArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int8MultiArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int8MultiArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&[m[Kâ€™
[2.259s]  1399 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[2.259s]       |                          [01;36m[K^~~~~~~~~[m[K
[3.596s] gmake[2]: *** [CMakeFiles/sub_array.dir/build.make:76: CMakeFiles/sub_array.dir/src/array_sub.cpp.o] Error 1
[3.596s] gmake[1]: *** [CMakeFiles/Makefile2:165: CMakeFiles/sub_array.dir/all] Error 2
[3.597s] gmake: *** [Makefile:146: all] Error 2
[3.598s] Invoked command in '/home/daguill/my_ws/build/c_int' returned '2': CMAKE_PREFIX_PATH=/opt/ros/humble /usr/bin/cmake --build /home/daguill/my_ws/build/c_int -- -j12 -l12
